//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#include "pch.h"

#if defined _DEBUG && !defined DISABLE_XAML_GENERATED_BINDING_DEBUG_OUTPUT
extern "C" __declspec(dllimport) int __stdcall IsDebuggerPresent();
#endif

#include "MasterDetailPage.xaml.h"

void ::MasterDetailApp::MasterDetailPage::InitializeComponent()
{
    if (_contentLoaded)
    {
        return;
    }
    _contentLoaded = true;
    ::Windows::Foundation::Uri^ resourceLocator = ref new ::Windows::Foundation::Uri(L"ms-appx:///MasterDetailPage.xaml");
    ::Windows::UI::Xaml::Application::LoadComponent(this, resourceLocator, ::Windows::UI::Xaml::Controls::Primitives::ComponentResourceLocation::Application);
}


/// <summary>
/// Auto generated class for compiled bindings.
/// </summary>
class MasterDetailApp::MasterDetailPage::MasterDetailPage_obj2_Bindings 
    : public ::XamlBindingInfo::XamlBindingsBase<::MasterDetailApp::ViewModels::ItemViewModel^>
{
public:
    MasterDetailPage_obj2_Bindings()
    {
    }

    void Connect(int __connectionId, ::Platform::Object^ __target)
    {
        switch(__connectionId)
        {
            case 3:
                this->obj3 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
                break;
            case 4:
                this->obj4 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
                break;
        }
    }

    void ResetTemplate()
    {
    }

    int ProcessBindings(::Windows::UI::Xaml::Controls::ContainerContentChangingEventArgs^ args)
    {
        int nextPhase = -1;
        return nextPhase;
    }

private:
    // Fields for each control that has bindings.
    ::Windows::UI::Xaml::Controls::TextBlock^ obj3;
    ::Windows::UI::Xaml::Controls::TextBlock^ obj4;

    // Update methods for each path node used in binding steps.
    void Update_(::MasterDetailApp::ViewModels::ItemViewModel^ obj, bool isInitialUpdate, int phase)
    {
        if (obj != nullptr)
        {
            if (phase == -1 || phase == 0)
            {
                this->Update_Title(obj->Title, isInitialUpdate, phase);
            }
            if (phase == -1 || phase == 0)
            {
                this->Update_Text(obj->Text, isInitialUpdate, phase);
            }
        }
    }
    void Update_Title(::Platform::String^ obj, bool isInitialUpdate, int phase)
    {
        if (isInitialUpdate || phase != -1)
        {
            ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_Controls_TextBlock_Text(this->obj3, obj, -1, phase, nullptr);
        }
    }
    void Update_Text(::Platform::String^ obj, bool isInitialUpdate, int phase)
    {
        if (isInitialUpdate || phase != -1)
        {
            ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_Controls_TextBlock_Text(this->obj4, obj, -1, phase, nullptr);
        }
    }
};

/// <summary>
/// Auto generated class for compiled bindings.
/// </summary>
class MasterDetailApp::MasterDetailPage::MasterDetailPage_obj5_Bindings 
    : public ::XamlBindingInfo::XamlBindingsBase<::MasterDetailApp::ViewModels::ItemViewModel^>
{
public:
    MasterDetailPage_obj5_Bindings()
    {
    }

    void Connect(int __connectionId, ::Platform::Object^ __target)
    {
        switch(__connectionId)
        {
            case 6:
                this->obj6 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
                break;
            case 7:
                this->obj7 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
                break;
            case 8:
                this->obj8 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
                break;
        }
    }

    void ResetTemplate()
    {
    }

    int ProcessBindings(::Windows::UI::Xaml::Controls::ContainerContentChangingEventArgs^ args)
    {
        int nextPhase = -1;
        return nextPhase;
    }

private:
    // Fields for each control that has bindings.
    ::Windows::UI::Xaml::Controls::TextBlock^ obj6;
    ::Windows::UI::Xaml::Controls::TextBlock^ obj7;
    ::Windows::UI::Xaml::Controls::TextBlock^ obj8;

    // Update methods for each path node used in binding steps.
    void Update_(::MasterDetailApp::ViewModels::ItemViewModel^ obj, bool isInitialUpdate, int phase)
    {
        if (obj != nullptr)
        {
            if (phase == -1 || phase == 0)
            {
                this->Update_Title(obj->Title, isInitialUpdate, phase);
            }
            if (phase == -1 || phase == 0)
            {
                this->Update_Text(obj->Text, isInitialUpdate, phase);
            }
            if (phase == -1 || phase == 0)
            {
                this->Update_DateCreatedHourMinute(obj->DateCreatedHourMinute, isInitialUpdate, phase);
            }
        }
    }
    void Update_Title(::Platform::String^ obj, bool isInitialUpdate, int phase)
    {
        if (isInitialUpdate || phase != -1)
        {
            ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_Controls_TextBlock_Text(this->obj6, obj, -1, phase, nullptr);
        }
    }
    void Update_Text(::Platform::String^ obj, bool isInitialUpdate, int phase)
    {
        if (isInitialUpdate || phase != -1)
        {
            ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_Controls_TextBlock_Text(this->obj7, obj, -1, phase, nullptr);
        }
    }
    void Update_DateCreatedHourMinute(::Platform::String^ obj, bool isInitialUpdate, int phase)
    {
        if (isInitialUpdate || phase != -1)
        {
            ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_Controls_TextBlock_Text(this->obj8, obj, -1, phase, nullptr);
        }
    }
};

/// <summary>
/// Auto generated class for compiled bindings.
/// </summary>
class MasterDetailApp::MasterDetailPage::MasterDetailPage_obj1_Bindings 
    : public ::XamlBindingInfo::XamlBindingsBase<::MasterDetailApp::MasterDetailPage^>
    , public ::XamlBindingInfo::IXamlBindingTracking
{
public:
    MasterDetailPage_obj1_Bindings()
    {
        InitializeTracking(this);
    }

    void Connect(int __connectionId, ::Platform::Object^ __target)
    {
        switch(__connectionId)
        {
            case 16:
                this->obj16 = safe_cast<::Windows::UI::Xaml::Controls::ContentPresenter^>(__target);
                break;
        }
    }

    void ResetTemplate()
    {
   
        ReleaseAllListeners();
    }

    int ProcessBindings(::Windows::UI::Xaml::Controls::ContainerContentChangingEventArgs^ args)
    {
        int nextPhase = -1;
        return nextPhase;
    }

private:
    // Fields for each control that has bindings.
    ::Windows::UI::Xaml::Controls::ContentPresenter^ obj16;
    
    // Fields for binding tracking.
    ::Windows::UI::Xaml::DependencyObject^ cacheDPC_MasterListView_SelectedItem = nullptr;
    __int64 tokenDPC_MasterListView_SelectedItem = 0;

    // Update methods for each path node used in binding steps.
    void Update_(::MasterDetailApp::MasterDetailPage^ obj, bool isInitialUpdate, int phase)
    {
        if (obj != nullptr)
        {
            if (phase == -1 || phase == 0)
            {
                this->Update_MasterListView(obj->MasterListView, isInitialUpdate, phase);
            }
        }
    }
    void Update_MasterListView(::Windows::UI::Xaml::Controls::ListView^ obj, bool isInitialUpdate, int phase)
    {
        this->_bindingsTracking->UpdateDependencyPropertyChangedListener(obj, ::Windows::UI::Xaml::Controls::ListView::SelectedItemProperty, &this->cacheDPC_MasterListView_SelectedItem, &this->tokenDPC_MasterListView_SelectedItem);
        if (obj != nullptr)
        {
            this->Update_MasterListView_SelectedItem(obj->SelectedItem, isInitialUpdate, phase);
        }
    }
    void Update_MasterListView_SelectedItem(::Platform::Object^ obj, bool isInitialUpdate, int phase)
    {
        ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_Controls_ContentPresenter_Content(this->obj16, obj, -1, phase, nullptr);
        isInitialUpdate; // unreferenced
        phase; // unreferenced
    }

    virtual void ReleaseAllListeners() override
    {
        this->_bindingsTracking->UpdateDependencyPropertyChangedListener(nullptr, ::Windows::UI::Xaml::Controls::ListView::SelectedItemProperty, &this->cacheDPC_MasterListView_SelectedItem, &this->tokenDPC_MasterListView_SelectedItem);
    }

    virtual void PropertyChanged(Platform::Object^ sender, ::Windows::UI::Xaml::Data::PropertyChangedEventArgs^ e) override
    {
    }

    void CollectionChanged(::Platform::Object^ sender, ::Windows::UI::Xaml::Interop::NotifyCollectionChangedEventArgs^ e)
    {
    }

    void VectorChanged(::Platform::Object^ sender, ::Windows::Foundation::Collections::IVectorChangedEventArgs^ e)
    {
    }

    void DependencyPropertyChanged(::Windows::UI::Xaml::DependencyObject^ sender, Windows::UI::Xaml::DependencyProperty^ prop)
    {
        if (this->cacheDPC_MasterListView_SelectedItem != nullptr && this->cacheDPC_MasterListView_SelectedItem->Equals(sender) && ::Windows::UI::Xaml::Controls::ListView::SelectedItemProperty->Equals(prop))
        {
            ::Windows::UI::Xaml::Controls::ListView^ obj = safe_cast<::Windows::UI::Xaml::Controls::ListView^>(sender);
            if (obj != nullptr)
            {
                this->Update_MasterListView_SelectedItem(obj->SelectedItem, false, -1);
            }
        }
    }
};

void ::MasterDetailApp::MasterDetailPage::Connect(int __connectionId, ::Platform::Object^ __target)
{
    switch (__connectionId)
    {
        case 9:
            {
                this->LayoutRoot = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
                (safe_cast<::Windows::UI::Xaml::Controls::Grid^>(this->LayoutRoot))->Loaded += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::MasterDetailApp::MasterDetailPage::*)
                    (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&MasterDetailPage::LayoutRoot_Loaded);
            }
            break;
        case 10:
            {
                this->AdaptiveStates = safe_cast<::Windows::UI::Xaml::VisualStateGroup^>(__target);
                (safe_cast<::Windows::UI::Xaml::VisualStateGroup^>(this->AdaptiveStates))->CurrentStateChanged += ref new ::Windows::UI::Xaml::VisualStateChangedEventHandler(this, (void (::MasterDetailApp::MasterDetailPage::*)
                    (::Platform::Object^, ::Windows::UI::Xaml::VisualStateChangedEventArgs^))&MasterDetailPage::AdaptiveStates_CurrentStateChanged);
            }
            break;
        case 11:
            {
                this->DefaultState = safe_cast<::Windows::UI::Xaml::VisualState^>(__target);
            }
            break;
        case 12:
            {
                this->NarrowState = safe_cast<::Windows::UI::Xaml::VisualState^>(__target);
            }
            break;
        case 13:
            {
                this->MasterColumn = safe_cast<::Windows::UI::Xaml::Controls::ColumnDefinition^>(__target);
            }
            break;
        case 14:
            {
                this->DetailColumn = safe_cast<::Windows::UI::Xaml::Controls::ColumnDefinition^>(__target);
            }
            break;
        case 15:
            {
                this->MasterListView = safe_cast<::Windows::UI::Xaml::Controls::ListView^>(__target);
                (safe_cast<::Windows::UI::Xaml::Controls::ListView^>(this->MasterListView))->ItemClick += ref new ::Windows::UI::Xaml::Controls::ItemClickEventHandler(this, (void (::MasterDetailApp::MasterDetailPage::*)
                    (::Platform::Object^, ::Windows::UI::Xaml::Controls::ItemClickEventArgs^))&MasterDetailPage::MasterListView_ItemClick);
            }
            break;
        case 16:
            {
                this->DetailContentPresenter = safe_cast<::Windows::UI::Xaml::Controls::ContentPresenter^>(__target);
            }
            break;
    }
    _contentLoaded = true;
}

::Windows::UI::Xaml::Markup::IComponentConnector^ ::MasterDetailApp::MasterDetailPage::GetBindingConnector(int __connectionId, ::Platform::Object^ __target)
{
    ::XamlBindingInfo::XamlBindings^ bindings = nullptr;
    switch (__connectionId)
    {
        case 1:
            {
                ::Windows::UI::Xaml::Controls::Page^ element1 = safe_cast<::Windows::UI::Xaml::Controls::Page^>(__target);
                MasterDetailPage_obj1_Bindings* objBindings = new MasterDetailPage_obj1_Bindings();
                objBindings->SetDataRoot(this);
                bindings = ref new ::XamlBindingInfo::XamlBindings(objBindings);
                this->Bindings = bindings;
                element1->Loading += ref new ::Windows::Foundation::TypedEventHandler<::Windows::UI::Xaml::FrameworkElement^, ::Platform::Object^>(bindings, &::XamlBindingInfo::XamlBindings::Loading);
            }
            break;
        case 2:
            {
                ::Windows::UI::Xaml::Controls::StackPanel^ element2 = safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(__target);
                MasterDetailPage_obj2_Bindings* objBindings = new MasterDetailPage_obj2_Bindings();
                objBindings->SetDataRoot(element2->DataContext);
                bindings = ref new ::XamlBindingInfo::XamlBindings(objBindings);
                element2->DataContextChanged += ref new Windows::Foundation::TypedEventHandler<Windows::UI::Xaml::FrameworkElement^, Windows::UI::Xaml::DataContextChangedEventArgs^>(bindings, &::XamlBindingInfo::XamlBindings::DataContextChanged);
                ::Windows::UI::Xaml::DataTemplate::SetExtensionInstance(element2, bindings);
            }
            break;
        case 5:
            {
                ::Windows::UI::Xaml::Controls::Grid^ element5 = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
                MasterDetailPage_obj5_Bindings* objBindings = new MasterDetailPage_obj5_Bindings();
                objBindings->SetDataRoot(element5->DataContext);
                bindings = ref new ::XamlBindingInfo::XamlBindings(objBindings);
                element5->DataContextChanged += ref new Windows::Foundation::TypedEventHandler<Windows::UI::Xaml::FrameworkElement^, Windows::UI::Xaml::DataContextChangedEventArgs^>(bindings, &::XamlBindingInfo::XamlBindings::DataContextChanged);
                ::Windows::UI::Xaml::DataTemplate::SetExtensionInstance(element5, bindings);
            }
            break;
    }
    return bindings;
}


