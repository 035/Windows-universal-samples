//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#include "pch.h"

#if defined _DEBUG && !defined DISABLE_XAML_GENERATED_BINDING_DEBUG_OUTPUT
extern "C" __declspec(dllimport) int __stdcall IsDebuggerPresent();
#endif

#include "DetailPage.xaml.h"

void ::MasterDetailApp::DetailPage::InitializeComponent()
{
    if (_contentLoaded)
    {
        return;
    }
    _contentLoaded = true;
    ::Windows::Foundation::Uri^ resourceLocator = ref new ::Windows::Foundation::Uri(L"ms-appx:///DetailPage.xaml");
    ::Windows::UI::Xaml::Application::LoadComponent(this, resourceLocator, ::Windows::UI::Xaml::Controls::Primitives::ComponentResourceLocation::Application);
}


/// <summary>
/// Auto generated class for compiled bindings.
/// </summary>
class MasterDetailApp::DetailPage::DetailPage_obj1_Bindings 
    : public ::XamlBindingInfo::XamlBindingsBase<::MasterDetailApp::DetailPage^>
    , public ::XamlBindingInfo::IXamlBindingTracking
{
public:
    DetailPage_obj1_Bindings()
    {
        InitializeTracking(this);
    }

    void Connect(int __connectionId, ::Platform::Object^ __target)
    {
        switch(__connectionId)
        {
            case 3:
                this->obj3 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
                ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_Controls_TextBlock_Text(this->obj3, this->obj3TextDeferredValue, -1, -1, nullptr);
                break;
            case 5:
                this->obj5 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
                ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_Controls_TextBlock_Text(this->obj5, this->obj5TextDeferredValue, -1, -1, nullptr);
                break;
        }
    }

    void ResetTemplate()
    {
   
        ReleaseAllListeners();
    }

    int ProcessBindings(::Windows::UI::Xaml::Controls::ContainerContentChangingEventArgs^ args)
    {
        int nextPhase = -1;
        return nextPhase;
    }

private:
    // Fields for each control that has bindings.
    ::Windows::UI::Xaml::Controls::TextBlock^ obj3;
    ::Platform::String^ obj3TextDeferredValue;
    ::Windows::UI::Xaml::Controls::TextBlock^ obj5;
    ::Platform::String^ obj5TextDeferredValue;
    
    // Fields for binding tracking.
    ::Windows::UI::Xaml::DependencyObject^ cacheDPC_Item = nullptr;
    __int64 tokenDPC_Item = 0;

    // Update methods for each path node used in binding steps.
    void Update_(::MasterDetailApp::DetailPage^ obj, bool isInitialUpdate, int phase)
    {
        this->_bindingsTracking->UpdateDependencyPropertyChangedListener(obj, ::MasterDetailApp::DetailPage::ItemProperty, &this->cacheDPC_Item, &this->tokenDPC_Item);
        if (obj != nullptr)
        {
            if (phase == -1 || phase == 0)
            {
                this->Update_Item(obj->Item, isInitialUpdate, phase);
            }
        }
    }
    void Update_Item(::MasterDetailApp::ViewModels::ItemViewModel^ obj, bool isInitialUpdate, int phase)
    {
        if (obj != nullptr)
        {
            this->Update_Item_Text(obj->Text, isInitialUpdate, phase);
            this->Update_Item_Title(obj->Title, isInitialUpdate, phase);
        }
    }
    void Update_Item_Text(::Platform::String^ obj, bool isInitialUpdate, int phase)
    {
        if (this->obj3 != nullptr)
        {
            ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_Controls_TextBlock_Text(this->obj3, obj, -1, phase, nullptr);
        }
        else
        {
            this->obj3TextDeferredValue = obj;
        }
        isInitialUpdate; // unreferenced
        phase; // unreferenced
    }
    void Update_Item_Title(::Platform::String^ obj, bool isInitialUpdate, int phase)
    {
        if (this->obj5 != nullptr)
        {
            ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_Controls_TextBlock_Text(this->obj5, obj, -1, phase, nullptr);
        }
        else
        {
            this->obj5TextDeferredValue = obj;
        }
        isInitialUpdate; // unreferenced
        phase; // unreferenced
    }

    virtual void ReleaseAllListeners() override
    {
        this->_bindingsTracking->UpdateDependencyPropertyChangedListener(nullptr, ::MasterDetailApp::DetailPage::ItemProperty, &this->cacheDPC_Item, &this->tokenDPC_Item);
    }

    virtual void PropertyChanged(Platform::Object^ sender, ::Windows::UI::Xaml::Data::PropertyChangedEventArgs^ e) override
    {
    }

    void CollectionChanged(::Platform::Object^ sender, ::Windows::UI::Xaml::Interop::NotifyCollectionChangedEventArgs^ e)
    {
    }

    void VectorChanged(::Platform::Object^ sender, ::Windows::Foundation::Collections::IVectorChangedEventArgs^ e)
    {
    }

    void DependencyPropertyChanged(::Windows::UI::Xaml::DependencyObject^ sender, Windows::UI::Xaml::DependencyProperty^ prop)
    {
        if (this->cacheDPC_Item != nullptr && this->cacheDPC_Item->Equals(sender) && ::MasterDetailApp::DetailPage::ItemProperty->Equals(prop))
        {
            ::MasterDetailApp::DetailPage^ obj = safe_cast<::MasterDetailApp::DetailPage^>(sender);
            if (obj != nullptr)
            {
                this->Update_Item(obj->Item, false, -1);
            }
        }
    }
};

void ::MasterDetailApp::DetailPage::Connect(int __connectionId, ::Platform::Object^ __target)
{
    switch (__connectionId)
    {
        case 1:
            {
                ::Windows::UI::Xaml::Controls::Page^ element1 = safe_cast<::Windows::UI::Xaml::Controls::Page^>(__target);
                (safe_cast<::Windows::UI::Xaml::Controls::Page^>(element1))->Loaded += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::MasterDetailApp::DetailPage::*)
                    (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DetailPage::PageRoot_Loaded);
                (safe_cast<::Windows::UI::Xaml::Controls::Page^>(element1))->Unloaded += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::MasterDetailApp::DetailPage::*)
                    (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DetailPage::PageRoot_Unloaded);
            }
            break;
        case 2:
            {
                this->RootPanel = safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(__target);
            }
            break;
        case 4:
            {
                this->BackButton = safe_cast<::Windows::UI::Xaml::Controls::Button^>(__target);
                (safe_cast<::Windows::UI::Xaml::Controls::Button^>(this->BackButton))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::MasterDetailApp::DetailPage::*)
                    (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DetailPage::BackButton_Click);
            }
            break;
    }
    _contentLoaded = true;
}

::Windows::UI::Xaml::Markup::IComponentConnector^ ::MasterDetailApp::DetailPage::GetBindingConnector(int __connectionId, ::Platform::Object^ __target)
{
    ::XamlBindingInfo::XamlBindings^ bindings = nullptr;
    switch (__connectionId)
    {
        case 1:
            {
                ::Windows::UI::Xaml::Controls::Page^ element1 = safe_cast<::Windows::UI::Xaml::Controls::Page^>(__target);
                DetailPage_obj1_Bindings* objBindings = new DetailPage_obj1_Bindings();
                objBindings->SetDataRoot(this);
                bindings = ref new ::XamlBindingInfo::XamlBindings(objBindings);
                this->Bindings = bindings;
                element1->Loading += ref new ::Windows::Foundation::TypedEventHandler<::Windows::UI::Xaml::FrameworkElement^, ::Platform::Object^>(bindings, &::XamlBindingInfo::XamlBindings::Loading);
            }
            break;
    }
    return bindings;
}


