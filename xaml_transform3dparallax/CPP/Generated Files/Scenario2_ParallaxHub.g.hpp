//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#include "pch.h"

#if defined _DEBUG && !defined DISABLE_XAML_GENERATED_BINDING_DEBUG_OUTPUT
extern "C" __declspec(dllimport) int __stdcall IsDebuggerPresent();
#endif

#include "Scenario2_ParallaxHub.xaml.h"

void ::Transform3DParallax::Scenario2_ParallaxHub::InitializeComponent()
{
    if (_contentLoaded)
    {
        return;
    }
    _contentLoaded = true;
    ::Windows::Foundation::Uri^ resourceLocator = ref new ::Windows::Foundation::Uri(L"ms-appx:///Scenario2_ParallaxHub.xaml");
    ::Windows::UI::Xaml::Application::LoadComponent(this, resourceLocator, ::Windows::UI::Xaml::Controls::Primitives::ComponentResourceLocation::Application);
}


/// <summary>
/// Auto generated class for compiled bindings.
/// </summary>
class Transform3DParallax::Scenario2_ParallaxHub::Scenario2_ParallaxHub_obj1_Bindings 
    : public ::XamlBindingInfo::XamlBindingsBase<::Transform3DParallax::Scenario2_ParallaxHub^>
    , public ::XamlBindingInfo::IXamlBindingTracking
{
public:
    Scenario2_ParallaxHub_obj1_Bindings()
    {
        InitializeTracking(this);
    }

    void Connect(int __connectionId, ::Platform::Object^ __target)
    {
        switch(__connectionId)
        {
            case 3:
                this->obj3 = safe_cast<::Windows::UI::Xaml::Controls::HubSection^>(__target);
                break;
            case 4:
                this->obj4 = safe_cast<::Windows::UI::Xaml::Controls::HubSection^>(__target);
                break;
            case 5:
                this->obj5 = safe_cast<::Windows::UI::Xaml::Controls::HubSection^>(__target);
                break;
            case 6:
                this->obj6 = safe_cast<::Windows::UI::Xaml::Controls::HubSection^>(__target);
                break;
        }
    }

    void ResetTemplate()
    {
   
        ReleaseAllListeners();
    }

    int ProcessBindings(::Windows::UI::Xaml::Controls::ContainerContentChangingEventArgs^ args)
    {
        int nextPhase = -1;
        return nextPhase;
    }

private:
    // Fields for each control that has bindings.
    ::Windows::UI::Xaml::Controls::HubSection^ obj3;
    ::Windows::UI::Xaml::Controls::HubSection^ obj4;
    ::Windows::UI::Xaml::Controls::HubSection^ obj5;
    ::Windows::UI::Xaml::Controls::HubSection^ obj6;
    
    // Fields for binding tracking.
    ::Windows::UI::Xaml::DependencyObject^ cacheDPC_DesiredHubSectionWidth = nullptr;
    __int64 tokenDPC_DesiredHubSectionWidth = 0;

    // Update methods for each path node used in binding steps.
    void Update_(::Transform3DParallax::Scenario2_ParallaxHub^ obj, bool isInitialUpdate, int phase)
    {
        this->_bindingsTracking->UpdateDependencyPropertyChangedListener(obj, ::Transform3DParallax::Scenario2_ParallaxHub::DesiredHubSectionWidthProperty, &this->cacheDPC_DesiredHubSectionWidth, &this->tokenDPC_DesiredHubSectionWidth);
        if (obj != nullptr)
        {
            if (phase == -1 || phase == 0)
            {
                this->Update_DesiredHubSectionWidth(obj->DesiredHubSectionWidth, isInitialUpdate, phase);
            }
        }
    }
    void Update_DesiredHubSectionWidth(::default::float64 obj, bool isInitialUpdate, int phase)
    {
        ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_FrameworkElement_Width(this->obj3, -1, phase, obj);
        ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_FrameworkElement_MaxWidth(this->obj4, -1, phase, obj);
        ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_FrameworkElement_MaxWidth(this->obj5, -1, phase, obj);
        ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_FrameworkElement_MaxWidth(this->obj6, -1, phase, obj);
        isInitialUpdate; // unreferenced
        phase; // unreferenced
    }

    virtual void ReleaseAllListeners() override
    {
        this->_bindingsTracking->UpdateDependencyPropertyChangedListener(nullptr, ::Transform3DParallax::Scenario2_ParallaxHub::DesiredHubSectionWidthProperty, &this->cacheDPC_DesiredHubSectionWidth, &this->tokenDPC_DesiredHubSectionWidth);
    }

    virtual void PropertyChanged(Platform::Object^ sender, ::Windows::UI::Xaml::Data::PropertyChangedEventArgs^ e) override
    {
    }

    void CollectionChanged(::Platform::Object^ sender, ::Windows::UI::Xaml::Interop::NotifyCollectionChangedEventArgs^ e)
    {
    }

    void VectorChanged(::Platform::Object^ sender, ::Windows::Foundation::Collections::IVectorChangedEventArgs^ e)
    {
    }

    void DependencyPropertyChanged(::Windows::UI::Xaml::DependencyObject^ sender, Windows::UI::Xaml::DependencyProperty^ prop)
    {
        if (this->cacheDPC_DesiredHubSectionWidth != nullptr && this->cacheDPC_DesiredHubSectionWidth->Equals(sender) && ::Transform3DParallax::Scenario2_ParallaxHub::DesiredHubSectionWidthProperty->Equals(prop))
        {
            ::Transform3DParallax::Scenario2_ParallaxHub^ obj = safe_cast<::Transform3DParallax::Scenario2_ParallaxHub^>(sender);
            if (obj != nullptr)
            {
                this->Update_DesiredHubSectionWidth(obj->DesiredHubSectionWidth, false, -1);
            }
        }
    }
};

void ::Transform3DParallax::Scenario2_ParallaxHub::Connect(int __connectionId, ::Platform::Object^ __target)
{
    switch (__connectionId)
    {
        case 2:
            {
                ::Transform3DParallax::ParallaxBackgroundHub^ element2 = safe_cast<::Transform3DParallax::ParallaxBackgroundHub^>(__target);
                (safe_cast<::Transform3DParallax::ParallaxBackgroundHub^>(element2))->SizeChanged += ref new ::Windows::UI::Xaml::SizeChangedEventHandler(this, (void (::Transform3DParallax::Scenario2_ParallaxHub::*)
                    (::Platform::Object^, ::Windows::UI::Xaml::SizeChangedEventArgs^))&Scenario2_ParallaxHub::ParallaxBackgroundHub_SizeChanged);
            }
            break;
    }
    _contentLoaded = true;
}

::Windows::UI::Xaml::Markup::IComponentConnector^ ::Transform3DParallax::Scenario2_ParallaxHub::GetBindingConnector(int __connectionId, ::Platform::Object^ __target)
{
    ::XamlBindingInfo::XamlBindings^ bindings = nullptr;
    switch (__connectionId)
    {
        case 1:
            {
                ::Windows::UI::Xaml::Controls::Page^ element1 = safe_cast<::Windows::UI::Xaml::Controls::Page^>(__target);
                Scenario2_ParallaxHub_obj1_Bindings* objBindings = new Scenario2_ParallaxHub_obj1_Bindings();
                objBindings->SetDataRoot(this);
                bindings = ref new ::XamlBindingInfo::XamlBindings(objBindings);
                this->Bindings = bindings;
                element1->Loading += ref new ::Windows::Foundation::TypedEventHandler<::Windows::UI::Xaml::FrameworkElement^, ::Platform::Object^>(bindings, &::XamlBindingInfo::XamlBindings::Loading);
            }
            break;
    }
    return bindings;
}


